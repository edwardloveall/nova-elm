<?xml version="1.0" encoding="UTF-8"?>
<syntax name="elm">
    <meta>
        <name>Elm</name>
        <type>compiled</type>
        <preferred-file-extension>elm</preferred-file-extension>
        <!-- https://textkool.com/en/ascii-art-generator?hl=default&vl=default&font=Roman -->
    </meta>
    
    <detectors>
        <extension priority="1.0">elm</extension>
    </detectors>
    
    <comments>
        <single>
            <expression>--</expression>
        </single>
        
        <multiline>
            <starts-with>
                <expression>{-</expression>
            </starts-with>
            <ends-with>
                <expression>-}</expression>
            </ends-with>
        </multiline>
    </comments>
    
    <brackets>
        <pair open="{" close="}" />
        <pair open="[" close="]" />
        <pair open="(" close=")" />
    </brackets>
    
    <surrounding-pairs>
        <pair open="{" close="}" />
        <pair open="[" close="]" />
        <pair open="(" close=")" />
        <pair open="&quot;" close="&quot;" />
    </surrounding-pairs>
    
    <indentation>
        <increase>
            <expression>(case|if|else|let|-&gt;).*</expression>
        </increase>
        <decrease>
            <expression>^\s+(in)\b|\s+</expression>
        </decrease>
    </indentation>
    
    <scopes>
        <include syntax="self" collection="comments" />
        <include syntax="self" collection="imports" />
        <include syntax="self" collection="type-definition" />
        <include syntax="self" collection="functions" />
    </scopes>

    <collections>
        <!-- 
                                                                                              .            
                                                                                            .o8            
             .ooooo.   .ooooo.  ooo. .oo.  .oo.   ooo. .oo.  .oo.    .ooooo.  ooo. .oo.   .o888oo  .oooo.o 
            d88' `"Y8 d88' `88b `888P"Y88bP"Y88b  `888P"Y88bP"Y88b  d88' `88b `888P"Y88b    888   d88(  "8 
            888       888   888  888   888   888   888   888   888  888ooo888  888   888    888   `"Y88b.  
            888   .o8 888   888  888   888   888   888   888   888  888    .o  888   888    888 . o.  )88b 
            `Y8bod8P' `Y8bod8P' o888o o888o o888o o888o o888o o888o `Y8bod8P' o888o o888o   "888" 8""888P' 

        -->
        <collection name="comments">
            <scope name="elm.comment.single" spell-check="true">
                <expression>(--)(.*)$</expression>
                <capture number="1" name="elm.punctuation.definition.begin" />
                <capture number="2" name="elm.comment.content" />
            </scope>
            
            <scope name="elm.comment.multiline" spell-check="true">
                <symbol type="comment">
                    <context behavior="subtree" />
                </symbol>
                <starts-with>
                    <expression>{-</expression>
                    <capture number="0" name="elm.punctuation.definition.begin" />
                </starts-with>
                <ends-with>
                    <expression>-}</expression>
                    <capture number="0" name="elm.punctuation.definition.end" />
                </ends-with>
            </scope>
        </collection>
        
        <!--
             o8o                                                      .            
             `"'                                                    .o8            
            oooo  ooo. .oo.  .oo.   oo.ooooo.   .ooooo.  oooo d8b .o888oo  .oooo.o 
            `888  `888P"Y88bP"Y88b   888' `88b d88' `88b `888""8P   888   d88(  "8 
             888   888   888   888   888   888 888   888  888       888   `"Y88b.  
             888   888   888   888   888   888 888   888  888       888 . o.  )88b 
            o888o o888o o888o o888o  888bod8P' `Y8bod8P' d888b      "888" 8""888P' 
                                     888                                           
                                    o888o                                          

        -->
        <collection name="imports">
            <scope name="elm.import">
                <starts-with>
                    <expression>(?=^(import|port\s+module|module))</expression>
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="keywords" />
                    <include syntax="self" collection="types" />
                    <scope name="elm.function.name">
                        <expression>\b([a-zA-ZÀ-ÖØ-öø-ÿ0-9]*)</expression>
                        <capture number="1" name="elm.identifier.function.name" />
                    </scope>
                </subscopes>
            </scope>
        </collection>

        <!-- 
             .o88o.                                       .    o8o                                 
             888 `"                                     .o8    `"'                                 
            o888oo  oooo  oooo  ooo. .oo.    .ooooo.  .o888oo oooo   .ooooo.  ooo. .oo.    .oooo.o 
             888    `888  `888  `888P"Y88b  d88' `"Y8   888   `888  d88' `88b `888P"Y88b  d88(  "8 
             888     888   888   888   888  888         888    888  888   888  888   888  `"Y88b.  
             888     888   888   888   888  888   .o8   888 .  888  888   888  888   888  o.  )88b 
            o888o    `V88V"V8P' o888o o888o `Y8bod8P'   "888" o888o `Y8bod8P' o888o o888o 8""888P' 

        -->
        <collection name="functions">         
            <!-- Signature -->
            <scope name="elm.functions.signature">
                <symbol type="function">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>^(port\s+)?([a-z][A-Za-zÀ-ÖØ-öø-ÿ0-9]*)\s+(\:)</expression>
                    <capture number="1" name="elm.keyword" />
                    <capture number="2" name="elm.identifier.function.name" />
                    <capture number="3" name="elm.keyword" />
                </starts-with>
                <ends-with>
                    <expression>(?=^\S)</expression>
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="comments" />
                    <include syntax="self" collection="strings" />
                    <include syntax="self" collection="keywords" />
                    <include syntax="self" collection="values" />
                    <include syntax="self" collection="types" />
                    <include syntax="self" collection="syntax" />
                </subscopes>
            </scope>
            
            <!-- Function -->
            <scope name="elm.functions.block">
                <symbol type="function">
                    <context behavior="subtree" />
                </symbol>
                <starts-with>
                    <expression>^(?| ([a-z][A-Za-zÀ-ÖØ-öø-ÿ0-9]*))</expression>
                    <capture number="1" name="elm.identifier.function.name" />
                </starts-with>
                <ends-with>
                    <expression>(?=^\n\n)</expression>
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="comments" />
                    <include syntax="self" collection="strings" />
                    <include syntax="self" collection="keywords" />
                    <include syntax="self" collection="values" />
                    <include syntax="self" collection="types" />
                    <include syntax="self" collection="syntax" />
                </subscopes>
            </scope>
        </collection>
        
        <!-- 
                .                                             
              .o8                                             
            .o888oo oooo    ooo oo.ooooo.   .ooooo.   .oooo.o 
              888    `88.  .8'   888' `88b d88' `88b d88(  "8 
              888     `88..8'    888   888 888ooo888 `"Y88b.  
              888 .    `888'     888   888 888    .o o.  )88b 
              "888"     .8'      888bod8P' `Y8bod8P' 8""888P' 
                    .o..P'       888                          
                    `Y8P'       o888o                         

        -->
        <collection name="type-definition">
            <scope>
                <symbol type="type">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>^(type)</expression>
                    <capture number="1" name="elm.keyword" />
                </starts-with>
                <ends-with>
                    <expression>(?=^\S)</expression>
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="keywords" />
                    <include syntax="self" collection="values" />
                    <include syntax="self" collection="types" />
                    <include syntax="self" collection="comments" />
                </subscopes>
            </scope>
        </collection>
        
        <collection name="types">
            <scope name="elm.type.usage">
                <expression>\b([A-ZÀ-Ö][a-zA-ZÀ-ÖØ-öø-ÿ0-9]*)</expression>
                <capture number="1" name="elm.identifier.type.name" />
            </scope>
        </collection>
        
        <!--
                                   oooo                                 
                                   `888                                 
             oooo    ooo  .oooo.    888  oooo  oooo   .ooooo.   .oooo.o 
              `88.  .8'  `P  )88b   888  `888  `888  d88' `88b d88(  "8 
               `88..8'    .oP"888   888   888   888  888ooo888 `"Y88b.  
                `888'    d8(  888   888   888   888  888    .o o.  )88b 
                 `8'     `Y888""8o o888o  `V88V"V8P' `Y8bod8P' 8""888P' 

        -->
        <collection name="values">
            <include syntax="self" collection="strings" />
            <scope name="elm.value.types">
                <strings>
                    <string>Just</string>
                    <string>Nothing</string>
                    <string>True</string>
                    <string>False</string>
                    <string>Char</string>
                    <string>Float</string>
                    <string>Int</string>
                    <string>List</string>
                    <string>Maybe</string>
                    <string>Result</string>
                    <string>String</string>
                    <string>Tuple</string>
                </strings>
                <capture number="0" name="elm.identifier.constant" />
            </scope>
            <scope name="elm.value.effects">
                <strings>
                    <string>Cmd</string>
                    <string>Sub</string>
                    <string>Debug</string>
                </strings>
                <capture number="0" name="elm.identifier.argument.name" />
            </scope>
            <scope name="elm.value.integer">
                <expression>\b-?\d+\b</expression>
                <capture number="0" name="elm.value.number.integer" />
            </scope>
            <scope name="elm.value.float">
                <expression>(-?)(\b\d+\.\d*|\.\d+)</expression>
                <capture number="1" name="elm.operator" />
                <capture number="2" name="elm.value.number.float.real" />
            </scope>
        </collection>
        
        <!--
                         .             o8o                                  
                       .o8             `"'                                  
             .oooo.o .o888oo oooo d8b oooo  ooo. .oo.    .oooooooo  .oooo.o 
            d88(  "8   888   `888""8P `888  `888P"Y88b  888' `88b  d88(  "8 
            `"Y88b.    888    888      888   888   888  888   888  `"Y88b.  
            o.  )88b   888 .  888      888   888   888  `88bod8P'  o.  )88b 
            8""888P'   "888" d888b    o888o o888o o888o `8oooooo.  8""888P' 
                                                        d"     YD           
                                                        "Y88888P'           

        -->
        <collection name="strings">
            <scope name="elm.string.multiline">
                <symbol type="comment">
                    <context behavior="subtree" />
                </symbol>
                <starts-with>
                    <expression>&quot;&quot;&quot;</expression>
                </starts-with>
                <ends-with>
                    <expression>&quot;&quot;&quot;</expression>
                </ends-with>
            </scope>
            <scope name="elm.string.double-quoted">
                <starts-with>
                    <expression>&quot;</expression>
                    <capture number="0" name="elm.string.quoted.double" />
                </starts-with>
                <ends-with>
                    <expression>&quot;|(?:(?&lt;!\\)$)</expression>
                    <capture number="0" name="elm.string.quoted.double" />
                </ends-with>
                <subscopes>
                    <scope name="elm.string.quoted.escape">
                        <expression>\\(?:\\|&quot;|n|r|t|b|f)</expression>
                    </scope>
                </subscopes>
            </scope>
            <scope name="elm.string.single-quoted">
                <starts-with>
                    <expression>&apos;</expression>
                    <capture number="0" name="elm.string.quoted.single" />
                </starts-with>
                <ends-with>
                    <expression>&apos;|(?:(?&lt;!\\)$)</expression>
                    <capture number="0" name="elm.string.quoted.single" />
                </ends-with>
                <subscopes>
                    <scope name="elm.string.quoted.escape">
                        <expression>\\(?:\\|&quot;|n|r|t|b|f)</expression>
                    </scope>
                </subscopes>
            </scope>
        </collection>
        
        <!--
                                                 .                         
                                               .o8
             .oooo.o oooo    ooo ooo. .oo.   .o888oo  .oooo.   oooo    ooo 
            d88(  "8  `88.  .8'  `888P"Y88b    888   `P  )88b   `88b..8P'  
            `"Y88b.    `88..8'    888   888    888    .oP"888     Y888'    
            o.  )88b    `888'     888   888    888 . d8(  888   .o8"'88b   
            8""888P'     .8'     o888o o888o   "888" `Y888""8o o88'   888o 
                    .o..P'                                                
                    `Y8P'

        -->
        <collection name="syntax">
            <scope name="elm.bracket">
                <expression>[\(\[\)\]]</expression>
            </scope>
            <scope name="elm.operator">
                <expression>\s+(\+ | \- | \* | \+\+ | \^ | \/ | \/\/ | \=\= | \/\= | &lt; | &gt; | &lt;&lt; | &gt;&gt; | &lt;\= | &gt;\= | &amp;&amp; | \|\|)\s+</expression>
                <capture number="1" name="elm.keyword" />
            </scope>
        </collection>
        
        <!-- Keywords -->
        <collection name="keywords">
            <include syntax="self" collection="punctuation" />
            <scope name="elm.keyword">
                <symbol type="keyword" />
                <strings>
                    <string>alias</string>
                    <string>as</string>
                    <string>case</string>
                    <string>else</string>
                    <string>exposing</string>
                    <string>if</string>
                    <string>import</string>
                    <string>in</string>
                    <string>let</string>
                    <string>module</string>
                    <string>of</string>
                    <string>port</string>
                    <string>then</string>
                    <string>type</string>
                </strings>
            </scope>
        </collection>
        
        <!-- Punctuation -->
        <collection name="punctuation">
            <scope name="elm.punctuation">
                <expression>(\|&gt; | &lt;\| | \. | \= | \s\_ | \\ | \| | \-&gt; | \:)</expression>
                <capture number="1" name="elm.keyword" />
            </scope>
        </collection>
    </collections>
</syntax>
